/* 
 * Aspose Words for Cloud Web API
 *
 * Version of Aspose.Words: 17.9.0.0 <br/>                                                      Version of Aspose.Words.Cloud: 17.8.0.0 <br/>                                                      Build number: 1
 *
 * OpenAPI spec version: v1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.com.aspose
{
    /// <summary>
    /// Represents the table properties.
    /// </summary>
    [DataContract]
    public partial class AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto :  IEquatable<AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto>, IValidatableObject
    {
        /// <summary>
        /// Specifies how an inline table is aligned in the document.
        /// </summary>
        /// <value>Specifies how an inline table is aligned in the document.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AlignmentEnum
        {
            
            /// <summary>
            /// Enum Left for "Left"
            /// </summary>
            [EnumMember(Value = "Left")]
            Left,
            
            /// <summary>
            /// Enum Center for "Center"
            /// </summary>
            [EnumMember(Value = "Center")]
            Center,
            
            /// <summary>
            /// Enum Right for "Right"
            /// </summary>
            [EnumMember(Value = "Right")]
            Right
        }

        /// <summary>
        /// Gets or sets the locale independent style identifier of the table style applied to this table.
        /// </summary>
        /// <value>Gets or sets the locale independent style identifier of the table style applied to this table.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StyleIdentifierEnum
        {
            
            /// <summary>
            /// Enum BookTitle for "BookTitle"
            /// </summary>
            [EnumMember(Value = "BookTitle")]
            BookTitle,
            
            /// <summary>
            /// Enum CommentReference for "CommentReference"
            /// </summary>
            [EnumMember(Value = "CommentReference")]
            CommentReference,
            
            /// <summary>
            /// Enum DefaultParagraphFont for "DefaultParagraphFont"
            /// </summary>
            [EnumMember(Value = "DefaultParagraphFont")]
            DefaultParagraphFont,
            
            /// <summary>
            /// Enum Emphasis for "Emphasis"
            /// </summary>
            [EnumMember(Value = "Emphasis")]
            Emphasis,
            
            /// <summary>
            /// Enum EndnoteReference for "EndnoteReference"
            /// </summary>
            [EnumMember(Value = "EndnoteReference")]
            EndnoteReference,
            
            /// <summary>
            /// Enum FollowedHyperlink for "FollowedHyperlink"
            /// </summary>
            [EnumMember(Value = "FollowedHyperlink")]
            FollowedHyperlink,
            
            /// <summary>
            /// Enum FootnoteReference for "FootnoteReference"
            /// </summary>
            [EnumMember(Value = "FootnoteReference")]
            FootnoteReference,
            
            /// <summary>
            /// Enum HtmlAcronym for "HtmlAcronym"
            /// </summary>
            [EnumMember(Value = "HtmlAcronym")]
            HtmlAcronym,
            
            /// <summary>
            /// Enum HtmlCite for "HtmlCite"
            /// </summary>
            [EnumMember(Value = "HtmlCite")]
            HtmlCite,
            
            /// <summary>
            /// Enum HtmlCode for "HtmlCode"
            /// </summary>
            [EnumMember(Value = "HtmlCode")]
            HtmlCode,
            
            /// <summary>
            /// Enum HtmlDefinition for "HtmlDefinition"
            /// </summary>
            [EnumMember(Value = "HtmlDefinition")]
            HtmlDefinition,
            
            /// <summary>
            /// Enum HtmlKeyboard for "HtmlKeyboard"
            /// </summary>
            [EnumMember(Value = "HtmlKeyboard")]
            HtmlKeyboard,
            
            /// <summary>
            /// Enum HtmlSample for "HtmlSample"
            /// </summary>
            [EnumMember(Value = "HtmlSample")]
            HtmlSample,
            
            /// <summary>
            /// Enum HtmlTypewriter for "HtmlTypewriter"
            /// </summary>
            [EnumMember(Value = "HtmlTypewriter")]
            HtmlTypewriter,
            
            /// <summary>
            /// Enum HtmlVariable for "HtmlVariable"
            /// </summary>
            [EnumMember(Value = "HtmlVariable")]
            HtmlVariable,
            
            /// <summary>
            /// Enum Hyperlink for "Hyperlink"
            /// </summary>
            [EnumMember(Value = "Hyperlink")]
            Hyperlink,
            
            /// <summary>
            /// Enum IntenseEmphasis for "IntenseEmphasis"
            /// </summary>
            [EnumMember(Value = "IntenseEmphasis")]
            IntenseEmphasis,
            
            /// <summary>
            /// Enum IntenseReference for "IntenseReference"
            /// </summary>
            [EnumMember(Value = "IntenseReference")]
            IntenseReference,
            
            /// <summary>
            /// Enum LineNumber for "LineNumber"
            /// </summary>
            [EnumMember(Value = "LineNumber")]
            LineNumber,
            
            /// <summary>
            /// Enum PageNumber for "PageNumber"
            /// </summary>
            [EnumMember(Value = "PageNumber")]
            PageNumber,
            
            /// <summary>
            /// Enum PlaceholderText for "PlaceholderText"
            /// </summary>
            [EnumMember(Value = "PlaceholderText")]
            PlaceholderText,
            
            /// <summary>
            /// Enum Strong for "Strong"
            /// </summary>
            [EnumMember(Value = "Strong")]
            Strong,
            
            /// <summary>
            /// Enum SubtleEmphasis for "SubtleEmphasis"
            /// </summary>
            [EnumMember(Value = "SubtleEmphasis")]
            SubtleEmphasis,
            
            /// <summary>
            /// Enum SubtleReference for "SubtleReference"
            /// </summary>
            [EnumMember(Value = "SubtleReference")]
            SubtleReference,
            
            /// <summary>
            /// Enum BalloonText for "BalloonText"
            /// </summary>
            [EnumMember(Value = "BalloonText")]
            BalloonText,
            
            /// <summary>
            /// Enum BodyText for "BodyText"
            /// </summary>
            [EnumMember(Value = "BodyText")]
            BodyText,
            
            /// <summary>
            /// Enum BodyText2 for "BodyText2"
            /// </summary>
            [EnumMember(Value = "BodyText2")]
            BodyText2,
            
            /// <summary>
            /// Enum BodyText3 for "BodyText3"
            /// </summary>
            [EnumMember(Value = "BodyText3")]
            BodyText3,
            
            /// <summary>
            /// Enum BodyText1I for "BodyText1I"
            /// </summary>
            [EnumMember(Value = "BodyText1I")]
            BodyText1I,
            
            /// <summary>
            /// Enum BodyText1I2 for "BodyText1I2"
            /// </summary>
            [EnumMember(Value = "BodyText1I2")]
            BodyText1I2,
            
            /// <summary>
            /// Enum BodyTextInd for "BodyTextInd"
            /// </summary>
            [EnumMember(Value = "BodyTextInd")]
            BodyTextInd,
            
            /// <summary>
            /// Enum BodyTextInd2 for "BodyTextInd2"
            /// </summary>
            [EnumMember(Value = "BodyTextInd2")]
            BodyTextInd2,
            
            /// <summary>
            /// Enum BodyTextInd3 for "BodyTextInd3"
            /// </summary>
            [EnumMember(Value = "BodyTextInd3")]
            BodyTextInd3,
            
            /// <summary>
            /// Enum Closing for "Closing"
            /// </summary>
            [EnumMember(Value = "Closing")]
            Closing,
            
            /// <summary>
            /// Enum CommentSubject for "CommentSubject"
            /// </summary>
            [EnumMember(Value = "CommentSubject")]
            CommentSubject,
            
            /// <summary>
            /// Enum CommentText for "CommentText"
            /// </summary>
            [EnumMember(Value = "CommentText")]
            CommentText,
            
            /// <summary>
            /// Enum Date for "Date"
            /// </summary>
            [EnumMember(Value = "Date")]
            Date,
            
            /// <summary>
            /// Enum DocumentMap for "DocumentMap"
            /// </summary>
            [EnumMember(Value = "DocumentMap")]
            DocumentMap,
            
            /// <summary>
            /// Enum EmailSignature for "EmailSignature"
            /// </summary>
            [EnumMember(Value = "EmailSignature")]
            EmailSignature,
            
            /// <summary>
            /// Enum EndnoteText for "EndnoteText"
            /// </summary>
            [EnumMember(Value = "EndnoteText")]
            EndnoteText,
            
            /// <summary>
            /// Enum Footer for "Footer"
            /// </summary>
            [EnumMember(Value = "Footer")]
            Footer,
            
            /// <summary>
            /// Enum FootnoteText for "FootnoteText"
            /// </summary>
            [EnumMember(Value = "FootnoteText")]
            FootnoteText,
            
            /// <summary>
            /// Enum Header for "Header"
            /// </summary>
            [EnumMember(Value = "Header")]
            Header,
            
            /// <summary>
            /// Enum Heading1 for "Heading1"
            /// </summary>
            [EnumMember(Value = "Heading1")]
            Heading1,
            
            /// <summary>
            /// Enum Heading2 for "Heading2"
            /// </summary>
            [EnumMember(Value = "Heading2")]
            Heading2,
            
            /// <summary>
            /// Enum Heading3 for "Heading3"
            /// </summary>
            [EnumMember(Value = "Heading3")]
            Heading3,
            
            /// <summary>
            /// Enum Heading4 for "Heading4"
            /// </summary>
            [EnumMember(Value = "Heading4")]
            Heading4,
            
            /// <summary>
            /// Enum Heading5 for "Heading5"
            /// </summary>
            [EnumMember(Value = "Heading5")]
            Heading5,
            
            /// <summary>
            /// Enum Heading6 for "Heading6"
            /// </summary>
            [EnumMember(Value = "Heading6")]
            Heading6,
            
            /// <summary>
            /// Enum Heading7 for "Heading7"
            /// </summary>
            [EnumMember(Value = "Heading7")]
            Heading7,
            
            /// <summary>
            /// Enum Heading8 for "Heading8"
            /// </summary>
            [EnumMember(Value = "Heading8")]
            Heading8,
            
            /// <summary>
            /// Enum Heading9 for "Heading9"
            /// </summary>
            [EnumMember(Value = "Heading9")]
            Heading9,
            
            /// <summary>
            /// Enum HtmlAddress for "HtmlAddress"
            /// </summary>
            [EnumMember(Value = "HtmlAddress")]
            HtmlAddress,
            
            /// <summary>
            /// Enum HtmlTopOfForm for "HtmlTopOfForm"
            /// </summary>
            [EnumMember(Value = "HtmlTopOfForm")]
            HtmlTopOfForm,
            
            /// <summary>
            /// Enum HtmlBottomOfForm for "HtmlBottomOfForm"
            /// </summary>
            [EnumMember(Value = "HtmlBottomOfForm")]
            HtmlBottomOfForm,
            
            /// <summary>
            /// Enum HtmlPreformatted for "HtmlPreformatted"
            /// </summary>
            [EnumMember(Value = "HtmlPreformatted")]
            HtmlPreformatted,
            
            /// <summary>
            /// Enum IntenseQuote for "IntenseQuote"
            /// </summary>
            [EnumMember(Value = "IntenseQuote")]
            IntenseQuote,
            
            /// <summary>
            /// Enum Macro for "Macro"
            /// </summary>
            [EnumMember(Value = "Macro")]
            Macro,
            
            /// <summary>
            /// Enum MessageHeader for "MessageHeader"
            /// </summary>
            [EnumMember(Value = "MessageHeader")]
            MessageHeader,
            
            /// <summary>
            /// Enum NoteHeading for "NoteHeading"
            /// </summary>
            [EnumMember(Value = "NoteHeading")]
            NoteHeading,
            
            /// <summary>
            /// Enum PlainText for "PlainText"
            /// </summary>
            [EnumMember(Value = "PlainText")]
            PlainText,
            
            /// <summary>
            /// Enum Quote for "Quote"
            /// </summary>
            [EnumMember(Value = "Quote")]
            Quote,
            
            /// <summary>
            /// Enum Salutation for "Salutation"
            /// </summary>
            [EnumMember(Value = "Salutation")]
            Salutation,
            
            /// <summary>
            /// Enum Signature for "Signature"
            /// </summary>
            [EnumMember(Value = "Signature")]
            Signature,
            
            /// <summary>
            /// Enum Subtitle for "Subtitle"
            /// </summary>
            [EnumMember(Value = "Subtitle")]
            Subtitle,
            
            /// <summary>
            /// Enum Title for "Title"
            /// </summary>
            [EnumMember(Value = "Title")]
            Title,
            
            /// <summary>
            /// Enum Bibliography for "Bibliography"
            /// </summary>
            [EnumMember(Value = "Bibliography")]
            Bibliography,
            
            /// <summary>
            /// Enum BlockText for "BlockText"
            /// </summary>
            [EnumMember(Value = "BlockText")]
            BlockText,
            
            /// <summary>
            /// Enum Caption for "Caption"
            /// </summary>
            [EnumMember(Value = "Caption")]
            Caption,
            
            /// <summary>
            /// Enum EnvelopeAddress for "EnvelopeAddress"
            /// </summary>
            [EnumMember(Value = "EnvelopeAddress")]
            EnvelopeAddress,
            
            /// <summary>
            /// Enum EnvelopeReturn for "EnvelopeReturn"
            /// </summary>
            [EnumMember(Value = "EnvelopeReturn")]
            EnvelopeReturn,
            
            /// <summary>
            /// Enum Index1 for "Index1"
            /// </summary>
            [EnumMember(Value = "Index1")]
            Index1,
            
            /// <summary>
            /// Enum Index2 for "Index2"
            /// </summary>
            [EnumMember(Value = "Index2")]
            Index2,
            
            /// <summary>
            /// Enum Index3 for "Index3"
            /// </summary>
            [EnumMember(Value = "Index3")]
            Index3,
            
            /// <summary>
            /// Enum Index4 for "Index4"
            /// </summary>
            [EnumMember(Value = "Index4")]
            Index4,
            
            /// <summary>
            /// Enum Index5 for "Index5"
            /// </summary>
            [EnumMember(Value = "Index5")]
            Index5,
            
            /// <summary>
            /// Enum Index6 for "Index6"
            /// </summary>
            [EnumMember(Value = "Index6")]
            Index6,
            
            /// <summary>
            /// Enum Index7 for "Index7"
            /// </summary>
            [EnumMember(Value = "Index7")]
            Index7,
            
            /// <summary>
            /// Enum Index8 for "Index8"
            /// </summary>
            [EnumMember(Value = "Index8")]
            Index8,
            
            /// <summary>
            /// Enum Index9 for "Index9"
            /// </summary>
            [EnumMember(Value = "Index9")]
            Index9,
            
            /// <summary>
            /// Enum IndexHeading for "IndexHeading"
            /// </summary>
            [EnumMember(Value = "IndexHeading")]
            IndexHeading,
            
            /// <summary>
            /// Enum List for "List"
            /// </summary>
            [EnumMember(Value = "List")]
            List,
            
            /// <summary>
            /// Enum List2 for "List2"
            /// </summary>
            [EnumMember(Value = "List2")]
            List2,
            
            /// <summary>
            /// Enum List3 for "List3"
            /// </summary>
            [EnumMember(Value = "List3")]
            List3,
            
            /// <summary>
            /// Enum List4 for "List4"
            /// </summary>
            [EnumMember(Value = "List4")]
            List4,
            
            /// <summary>
            /// Enum List5 for "List5"
            /// </summary>
            [EnumMember(Value = "List5")]
            List5,
            
            /// <summary>
            /// Enum ListBullet for "ListBullet"
            /// </summary>
            [EnumMember(Value = "ListBullet")]
            ListBullet,
            
            /// <summary>
            /// Enum ListBullet2 for "ListBullet2"
            /// </summary>
            [EnumMember(Value = "ListBullet2")]
            ListBullet2,
            
            /// <summary>
            /// Enum ListBullet3 for "ListBullet3"
            /// </summary>
            [EnumMember(Value = "ListBullet3")]
            ListBullet3,
            
            /// <summary>
            /// Enum ListBullet4 for "ListBullet4"
            /// </summary>
            [EnumMember(Value = "ListBullet4")]
            ListBullet4,
            
            /// <summary>
            /// Enum ListBullet5 for "ListBullet5"
            /// </summary>
            [EnumMember(Value = "ListBullet5")]
            ListBullet5,
            
            /// <summary>
            /// Enum ListContinue for "ListContinue"
            /// </summary>
            [EnumMember(Value = "ListContinue")]
            ListContinue,
            
            /// <summary>
            /// Enum ListContinue2 for "ListContinue2"
            /// </summary>
            [EnumMember(Value = "ListContinue2")]
            ListContinue2,
            
            /// <summary>
            /// Enum ListContinue3 for "ListContinue3"
            /// </summary>
            [EnumMember(Value = "ListContinue3")]
            ListContinue3,
            
            /// <summary>
            /// Enum ListContinue4 for "ListContinue4"
            /// </summary>
            [EnumMember(Value = "ListContinue4")]
            ListContinue4,
            
            /// <summary>
            /// Enum ListContinue5 for "ListContinue5"
            /// </summary>
            [EnumMember(Value = "ListContinue5")]
            ListContinue5,
            
            /// <summary>
            /// Enum ListNumber for "ListNumber"
            /// </summary>
            [EnumMember(Value = "ListNumber")]
            ListNumber,
            
            /// <summary>
            /// Enum ListNumber2 for "ListNumber2"
            /// </summary>
            [EnumMember(Value = "ListNumber2")]
            ListNumber2,
            
            /// <summary>
            /// Enum ListNumber3 for "ListNumber3"
            /// </summary>
            [EnumMember(Value = "ListNumber3")]
            ListNumber3,
            
            /// <summary>
            /// Enum ListNumber4 for "ListNumber4"
            /// </summary>
            [EnumMember(Value = "ListNumber4")]
            ListNumber4,
            
            /// <summary>
            /// Enum ListNumber5 for "ListNumber5"
            /// </summary>
            [EnumMember(Value = "ListNumber5")]
            ListNumber5,
            
            /// <summary>
            /// Enum ListParagraph for "ListParagraph"
            /// </summary>
            [EnumMember(Value = "ListParagraph")]
            ListParagraph,
            
            /// <summary>
            /// Enum NoSpacing for "NoSpacing"
            /// </summary>
            [EnumMember(Value = "NoSpacing")]
            NoSpacing,
            
            /// <summary>
            /// Enum Normal for "Normal"
            /// </summary>
            [EnumMember(Value = "Normal")]
            Normal,
            
            /// <summary>
            /// Enum NormalWeb for "NormalWeb"
            /// </summary>
            [EnumMember(Value = "NormalWeb")]
            NormalWeb,
            
            /// <summary>
            /// Enum NormalIndent for "NormalIndent"
            /// </summary>
            [EnumMember(Value = "NormalIndent")]
            NormalIndent,
            
            /// <summary>
            /// Enum TableOfAuthorities for "TableOfAuthorities"
            /// </summary>
            [EnumMember(Value = "TableOfAuthorities")]
            TableOfAuthorities,
            
            /// <summary>
            /// Enum TableOfFigures for "TableOfFigures"
            /// </summary>
            [EnumMember(Value = "TableOfFigures")]
            TableOfFigures,
            
            /// <summary>
            /// Enum ToaHeading for "ToaHeading"
            /// </summary>
            [EnumMember(Value = "ToaHeading")]
            ToaHeading,
            
            /// <summary>
            /// Enum Toc1 for "Toc1"
            /// </summary>
            [EnumMember(Value = "Toc1")]
            Toc1,
            
            /// <summary>
            /// Enum Toc2 for "Toc2"
            /// </summary>
            [EnumMember(Value = "Toc2")]
            Toc2,
            
            /// <summary>
            /// Enum Toc3 for "Toc3"
            /// </summary>
            [EnumMember(Value = "Toc3")]
            Toc3,
            
            /// <summary>
            /// Enum Toc4 for "Toc4"
            /// </summary>
            [EnumMember(Value = "Toc4")]
            Toc4,
            
            /// <summary>
            /// Enum Toc5 for "Toc5"
            /// </summary>
            [EnumMember(Value = "Toc5")]
            Toc5,
            
            /// <summary>
            /// Enum Toc6 for "Toc6"
            /// </summary>
            [EnumMember(Value = "Toc6")]
            Toc6,
            
            /// <summary>
            /// Enum Toc7 for "Toc7"
            /// </summary>
            [EnumMember(Value = "Toc7")]
            Toc7,
            
            /// <summary>
            /// Enum Toc8 for "Toc8"
            /// </summary>
            [EnumMember(Value = "Toc8")]
            Toc8,
            
            /// <summary>
            /// Enum Toc9 for "Toc9"
            /// </summary>
            [EnumMember(Value = "Toc9")]
            Toc9,
            
            /// <summary>
            /// Enum TocHeading for "TocHeading"
            /// </summary>
            [EnumMember(Value = "TocHeading")]
            TocHeading,
            
            /// <summary>
            /// Enum Revision for "Revision"
            /// </summary>
            [EnumMember(Value = "Revision")]
            Revision,
            
            /// <summary>
            /// Enum OutlineList1 for "OutlineList1"
            /// </summary>
            [EnumMember(Value = "OutlineList1")]
            OutlineList1,
            
            /// <summary>
            /// Enum OutlineList2 for "OutlineList2"
            /// </summary>
            [EnumMember(Value = "OutlineList2")]
            OutlineList2,
            
            /// <summary>
            /// Enum OutlineList3 for "OutlineList3"
            /// </summary>
            [EnumMember(Value = "OutlineList3")]
            OutlineList3,
            
            /// <summary>
            /// Enum NoList for "NoList"
            /// </summary>
            [EnumMember(Value = "NoList")]
            NoList,
            
            /// <summary>
            /// Enum ColorfulGrid for "ColorfulGrid"
            /// </summary>
            [EnumMember(Value = "ColorfulGrid")]
            ColorfulGrid,
            
            /// <summary>
            /// Enum ColorfulGridAccent1 for "ColorfulGridAccent1"
            /// </summary>
            [EnumMember(Value = "ColorfulGridAccent1")]
            ColorfulGridAccent1,
            
            /// <summary>
            /// Enum ColorfulGridAccent2 for "ColorfulGridAccent2"
            /// </summary>
            [EnumMember(Value = "ColorfulGridAccent2")]
            ColorfulGridAccent2,
            
            /// <summary>
            /// Enum ColorfulGridAccent3 for "ColorfulGridAccent3"
            /// </summary>
            [EnumMember(Value = "ColorfulGridAccent3")]
            ColorfulGridAccent3,
            
            /// <summary>
            /// Enum ColorfulGridAccent4 for "ColorfulGridAccent4"
            /// </summary>
            [EnumMember(Value = "ColorfulGridAccent4")]
            ColorfulGridAccent4,
            
            /// <summary>
            /// Enum ColorfulGridAccent5 for "ColorfulGridAccent5"
            /// </summary>
            [EnumMember(Value = "ColorfulGridAccent5")]
            ColorfulGridAccent5,
            
            /// <summary>
            /// Enum ColorfulGridAccent6 for "ColorfulGridAccent6"
            /// </summary>
            [EnumMember(Value = "ColorfulGridAccent6")]
            ColorfulGridAccent6,
            
            /// <summary>
            /// Enum ColorfulList for "ColorfulList"
            /// </summary>
            [EnumMember(Value = "ColorfulList")]
            ColorfulList,
            
            /// <summary>
            /// Enum ColorfulListAccent1 for "ColorfulListAccent1"
            /// </summary>
            [EnumMember(Value = "ColorfulListAccent1")]
            ColorfulListAccent1,
            
            /// <summary>
            /// Enum ColorfulListAccent2 for "ColorfulListAccent2"
            /// </summary>
            [EnumMember(Value = "ColorfulListAccent2")]
            ColorfulListAccent2,
            
            /// <summary>
            /// Enum ColorfulListAccent3 for "ColorfulListAccent3"
            /// </summary>
            [EnumMember(Value = "ColorfulListAccent3")]
            ColorfulListAccent3,
            
            /// <summary>
            /// Enum ColorfulListAccent4 for "ColorfulListAccent4"
            /// </summary>
            [EnumMember(Value = "ColorfulListAccent4")]
            ColorfulListAccent4,
            
            /// <summary>
            /// Enum ColorfulListAccent5 for "ColorfulListAccent5"
            /// </summary>
            [EnumMember(Value = "ColorfulListAccent5")]
            ColorfulListAccent5,
            
            /// <summary>
            /// Enum ColorfulListAccent6 for "ColorfulListAccent6"
            /// </summary>
            [EnumMember(Value = "ColorfulListAccent6")]
            ColorfulListAccent6,
            
            /// <summary>
            /// Enum ColorfulShading for "ColorfulShading"
            /// </summary>
            [EnumMember(Value = "ColorfulShading")]
            ColorfulShading,
            
            /// <summary>
            /// Enum ColorfulShadingAccent1 for "ColorfulShadingAccent1"
            /// </summary>
            [EnumMember(Value = "ColorfulShadingAccent1")]
            ColorfulShadingAccent1,
            
            /// <summary>
            /// Enum ColorfulShadingAccent2 for "ColorfulShadingAccent2"
            /// </summary>
            [EnumMember(Value = "ColorfulShadingAccent2")]
            ColorfulShadingAccent2,
            
            /// <summary>
            /// Enum ColorfulShadingAccent3 for "ColorfulShadingAccent3"
            /// </summary>
            [EnumMember(Value = "ColorfulShadingAccent3")]
            ColorfulShadingAccent3,
            
            /// <summary>
            /// Enum ColorfulShadingAccent4 for "ColorfulShadingAccent4"
            /// </summary>
            [EnumMember(Value = "ColorfulShadingAccent4")]
            ColorfulShadingAccent4,
            
            /// <summary>
            /// Enum ColorfulShadingAccent5 for "ColorfulShadingAccent5"
            /// </summary>
            [EnumMember(Value = "ColorfulShadingAccent5")]
            ColorfulShadingAccent5,
            
            /// <summary>
            /// Enum ColorfulShadingAccent6 for "ColorfulShadingAccent6"
            /// </summary>
            [EnumMember(Value = "ColorfulShadingAccent6")]
            ColorfulShadingAccent6,
            
            /// <summary>
            /// Enum DarkList for "DarkList"
            /// </summary>
            [EnumMember(Value = "DarkList")]
            DarkList,
            
            /// <summary>
            /// Enum DarkListAccent1 for "DarkListAccent1"
            /// </summary>
            [EnumMember(Value = "DarkListAccent1")]
            DarkListAccent1,
            
            /// <summary>
            /// Enum DarkListAccent2 for "DarkListAccent2"
            /// </summary>
            [EnumMember(Value = "DarkListAccent2")]
            DarkListAccent2,
            
            /// <summary>
            /// Enum DarkListAccent3 for "DarkListAccent3"
            /// </summary>
            [EnumMember(Value = "DarkListAccent3")]
            DarkListAccent3,
            
            /// <summary>
            /// Enum DarkListAccent4 for "DarkListAccent4"
            /// </summary>
            [EnumMember(Value = "DarkListAccent4")]
            DarkListAccent4,
            
            /// <summary>
            /// Enum DarkListAccent5 for "DarkListAccent5"
            /// </summary>
            [EnumMember(Value = "DarkListAccent5")]
            DarkListAccent5,
            
            /// <summary>
            /// Enum DarkListAccent6 for "DarkListAccent6"
            /// </summary>
            [EnumMember(Value = "DarkListAccent6")]
            DarkListAccent6,
            
            /// <summary>
            /// Enum LightGrid for "LightGrid"
            /// </summary>
            [EnumMember(Value = "LightGrid")]
            LightGrid,
            
            /// <summary>
            /// Enum LightGridAccent1 for "LightGridAccent1"
            /// </summary>
            [EnumMember(Value = "LightGridAccent1")]
            LightGridAccent1,
            
            /// <summary>
            /// Enum LightGridAccent2 for "LightGridAccent2"
            /// </summary>
            [EnumMember(Value = "LightGridAccent2")]
            LightGridAccent2,
            
            /// <summary>
            /// Enum LightGridAccent3 for "LightGridAccent3"
            /// </summary>
            [EnumMember(Value = "LightGridAccent3")]
            LightGridAccent3,
            
            /// <summary>
            /// Enum LightGridAccent4 for "LightGridAccent4"
            /// </summary>
            [EnumMember(Value = "LightGridAccent4")]
            LightGridAccent4,
            
            /// <summary>
            /// Enum LightGridAccent5 for "LightGridAccent5"
            /// </summary>
            [EnumMember(Value = "LightGridAccent5")]
            LightGridAccent5,
            
            /// <summary>
            /// Enum LightGridAccent6 for "LightGridAccent6"
            /// </summary>
            [EnumMember(Value = "LightGridAccent6")]
            LightGridAccent6,
            
            /// <summary>
            /// Enum LightList for "LightList"
            /// </summary>
            [EnumMember(Value = "LightList")]
            LightList,
            
            /// <summary>
            /// Enum LightListAccent1 for "LightListAccent1"
            /// </summary>
            [EnumMember(Value = "LightListAccent1")]
            LightListAccent1,
            
            /// <summary>
            /// Enum LightListAccent2 for "LightListAccent2"
            /// </summary>
            [EnumMember(Value = "LightListAccent2")]
            LightListAccent2,
            
            /// <summary>
            /// Enum LightListAccent3 for "LightListAccent3"
            /// </summary>
            [EnumMember(Value = "LightListAccent3")]
            LightListAccent3,
            
            /// <summary>
            /// Enum LightListAccent4 for "LightListAccent4"
            /// </summary>
            [EnumMember(Value = "LightListAccent4")]
            LightListAccent4,
            
            /// <summary>
            /// Enum LightListAccent5 for "LightListAccent5"
            /// </summary>
            [EnumMember(Value = "LightListAccent5")]
            LightListAccent5,
            
            /// <summary>
            /// Enum LightListAccent6 for "LightListAccent6"
            /// </summary>
            [EnumMember(Value = "LightListAccent6")]
            LightListAccent6,
            
            /// <summary>
            /// Enum LightShading for "LightShading"
            /// </summary>
            [EnumMember(Value = "LightShading")]
            LightShading,
            
            /// <summary>
            /// Enum LightShadingAccent1 for "LightShadingAccent1"
            /// </summary>
            [EnumMember(Value = "LightShadingAccent1")]
            LightShadingAccent1,
            
            /// <summary>
            /// Enum LightShadingAccent2 for "LightShadingAccent2"
            /// </summary>
            [EnumMember(Value = "LightShadingAccent2")]
            LightShadingAccent2,
            
            /// <summary>
            /// Enum LightShadingAccent3 for "LightShadingAccent3"
            /// </summary>
            [EnumMember(Value = "LightShadingAccent3")]
            LightShadingAccent3,
            
            /// <summary>
            /// Enum LightShadingAccent4 for "LightShadingAccent4"
            /// </summary>
            [EnumMember(Value = "LightShadingAccent4")]
            LightShadingAccent4,
            
            /// <summary>
            /// Enum LightShadingAccent5 for "LightShadingAccent5"
            /// </summary>
            [EnumMember(Value = "LightShadingAccent5")]
            LightShadingAccent5,
            
            /// <summary>
            /// Enum LightShadingAccent6 for "LightShadingAccent6"
            /// </summary>
            [EnumMember(Value = "LightShadingAccent6")]
            LightShadingAccent6,
            
            /// <summary>
            /// Enum MediumGrid1 for "MediumGrid1"
            /// </summary>
            [EnumMember(Value = "MediumGrid1")]
            MediumGrid1,
            
            /// <summary>
            /// Enum MediumGrid1Accent1 for "MediumGrid1Accent1"
            /// </summary>
            [EnumMember(Value = "MediumGrid1Accent1")]
            MediumGrid1Accent1,
            
            /// <summary>
            /// Enum MediumGrid1Accent2 for "MediumGrid1Accent2"
            /// </summary>
            [EnumMember(Value = "MediumGrid1Accent2")]
            MediumGrid1Accent2,
            
            /// <summary>
            /// Enum MediumGrid1Accent3 for "MediumGrid1Accent3"
            /// </summary>
            [EnumMember(Value = "MediumGrid1Accent3")]
            MediumGrid1Accent3,
            
            /// <summary>
            /// Enum MediumGrid1Accent4 for "MediumGrid1Accent4"
            /// </summary>
            [EnumMember(Value = "MediumGrid1Accent4")]
            MediumGrid1Accent4,
            
            /// <summary>
            /// Enum MediumGrid1Accent5 for "MediumGrid1Accent5"
            /// </summary>
            [EnumMember(Value = "MediumGrid1Accent5")]
            MediumGrid1Accent5,
            
            /// <summary>
            /// Enum MediumGrid1Accent6 for "MediumGrid1Accent6"
            /// </summary>
            [EnumMember(Value = "MediumGrid1Accent6")]
            MediumGrid1Accent6,
            
            /// <summary>
            /// Enum MediumGrid2 for "MediumGrid2"
            /// </summary>
            [EnumMember(Value = "MediumGrid2")]
            MediumGrid2,
            
            /// <summary>
            /// Enum MediumGrid2Accent1 for "MediumGrid2Accent1"
            /// </summary>
            [EnumMember(Value = "MediumGrid2Accent1")]
            MediumGrid2Accent1,
            
            /// <summary>
            /// Enum MediumGrid2Accent2 for "MediumGrid2Accent2"
            /// </summary>
            [EnumMember(Value = "MediumGrid2Accent2")]
            MediumGrid2Accent2,
            
            /// <summary>
            /// Enum MediumGrid2Accent3 for "MediumGrid2Accent3"
            /// </summary>
            [EnumMember(Value = "MediumGrid2Accent3")]
            MediumGrid2Accent3,
            
            /// <summary>
            /// Enum MediumGrid2Accent4 for "MediumGrid2Accent4"
            /// </summary>
            [EnumMember(Value = "MediumGrid2Accent4")]
            MediumGrid2Accent4,
            
            /// <summary>
            /// Enum MediumGrid2Accent5 for "MediumGrid2Accent5"
            /// </summary>
            [EnumMember(Value = "MediumGrid2Accent5")]
            MediumGrid2Accent5,
            
            /// <summary>
            /// Enum MediumGrid2Accent6 for "MediumGrid2Accent6"
            /// </summary>
            [EnumMember(Value = "MediumGrid2Accent6")]
            MediumGrid2Accent6,
            
            /// <summary>
            /// Enum MediumGrid3 for "MediumGrid3"
            /// </summary>
            [EnumMember(Value = "MediumGrid3")]
            MediumGrid3,
            
            /// <summary>
            /// Enum MediumGrid3Accent1 for "MediumGrid3Accent1"
            /// </summary>
            [EnumMember(Value = "MediumGrid3Accent1")]
            MediumGrid3Accent1,
            
            /// <summary>
            /// Enum MediumGrid3Accent2 for "MediumGrid3Accent2"
            /// </summary>
            [EnumMember(Value = "MediumGrid3Accent2")]
            MediumGrid3Accent2,
            
            /// <summary>
            /// Enum MediumGrid3Accent3 for "MediumGrid3Accent3"
            /// </summary>
            [EnumMember(Value = "MediumGrid3Accent3")]
            MediumGrid3Accent3,
            
            /// <summary>
            /// Enum MediumGrid3Accent4 for "MediumGrid3Accent4"
            /// </summary>
            [EnumMember(Value = "MediumGrid3Accent4")]
            MediumGrid3Accent4,
            
            /// <summary>
            /// Enum MediumGrid3Accent5 for "MediumGrid3Accent5"
            /// </summary>
            [EnumMember(Value = "MediumGrid3Accent5")]
            MediumGrid3Accent5,
            
            /// <summary>
            /// Enum MediumGrid3Accent6 for "MediumGrid3Accent6"
            /// </summary>
            [EnumMember(Value = "MediumGrid3Accent6")]
            MediumGrid3Accent6,
            
            /// <summary>
            /// Enum MediumList1 for "MediumList1"
            /// </summary>
            [EnumMember(Value = "MediumList1")]
            MediumList1,
            
            /// <summary>
            /// Enum MediumList1Accent1 for "MediumList1Accent1"
            /// </summary>
            [EnumMember(Value = "MediumList1Accent1")]
            MediumList1Accent1,
            
            /// <summary>
            /// Enum MediumList1Accent2 for "MediumList1Accent2"
            /// </summary>
            [EnumMember(Value = "MediumList1Accent2")]
            MediumList1Accent2,
            
            /// <summary>
            /// Enum MediumList1Accent3 for "MediumList1Accent3"
            /// </summary>
            [EnumMember(Value = "MediumList1Accent3")]
            MediumList1Accent3,
            
            /// <summary>
            /// Enum MediumList1Accent4 for "MediumList1Accent4"
            /// </summary>
            [EnumMember(Value = "MediumList1Accent4")]
            MediumList1Accent4,
            
            /// <summary>
            /// Enum MediumList1Accent5 for "MediumList1Accent5"
            /// </summary>
            [EnumMember(Value = "MediumList1Accent5")]
            MediumList1Accent5,
            
            /// <summary>
            /// Enum MediumList1Accent6 for "MediumList1Accent6"
            /// </summary>
            [EnumMember(Value = "MediumList1Accent6")]
            MediumList1Accent6,
            
            /// <summary>
            /// Enum MediumList2 for "MediumList2"
            /// </summary>
            [EnumMember(Value = "MediumList2")]
            MediumList2,
            
            /// <summary>
            /// Enum MediumList2Accent1 for "MediumList2Accent1"
            /// </summary>
            [EnumMember(Value = "MediumList2Accent1")]
            MediumList2Accent1,
            
            /// <summary>
            /// Enum MediumList2Accent2 for "MediumList2Accent2"
            /// </summary>
            [EnumMember(Value = "MediumList2Accent2")]
            MediumList2Accent2,
            
            /// <summary>
            /// Enum MediumList2Accent3 for "MediumList2Accent3"
            /// </summary>
            [EnumMember(Value = "MediumList2Accent3")]
            MediumList2Accent3,
            
            /// <summary>
            /// Enum MediumList2Accent4 for "MediumList2Accent4"
            /// </summary>
            [EnumMember(Value = "MediumList2Accent4")]
            MediumList2Accent4,
            
            /// <summary>
            /// Enum MediumList2Accent5 for "MediumList2Accent5"
            /// </summary>
            [EnumMember(Value = "MediumList2Accent5")]
            MediumList2Accent5,
            
            /// <summary>
            /// Enum MediumList2Accent6 for "MediumList2Accent6"
            /// </summary>
            [EnumMember(Value = "MediumList2Accent6")]
            MediumList2Accent6,
            
            /// <summary>
            /// Enum MediumShading1 for "MediumShading1"
            /// </summary>
            [EnumMember(Value = "MediumShading1")]
            MediumShading1,
            
            /// <summary>
            /// Enum MediumShading1Accent1 for "MediumShading1Accent1"
            /// </summary>
            [EnumMember(Value = "MediumShading1Accent1")]
            MediumShading1Accent1,
            
            /// <summary>
            /// Enum MediumShading1Accent2 for "MediumShading1Accent2"
            /// </summary>
            [EnumMember(Value = "MediumShading1Accent2")]
            MediumShading1Accent2,
            
            /// <summary>
            /// Enum MediumShading1Accent3 for "MediumShading1Accent3"
            /// </summary>
            [EnumMember(Value = "MediumShading1Accent3")]
            MediumShading1Accent3,
            
            /// <summary>
            /// Enum MediumShading1Accent4 for "MediumShading1Accent4"
            /// </summary>
            [EnumMember(Value = "MediumShading1Accent4")]
            MediumShading1Accent4,
            
            /// <summary>
            /// Enum MediumShading1Accent5 for "MediumShading1Accent5"
            /// </summary>
            [EnumMember(Value = "MediumShading1Accent5")]
            MediumShading1Accent5,
            
            /// <summary>
            /// Enum MediumShading1Accent6 for "MediumShading1Accent6"
            /// </summary>
            [EnumMember(Value = "MediumShading1Accent6")]
            MediumShading1Accent6,
            
            /// <summary>
            /// Enum MediumShading2 for "MediumShading2"
            /// </summary>
            [EnumMember(Value = "MediumShading2")]
            MediumShading2,
            
            /// <summary>
            /// Enum MediumShading2Accent1 for "MediumShading2Accent1"
            /// </summary>
            [EnumMember(Value = "MediumShading2Accent1")]
            MediumShading2Accent1,
            
            /// <summary>
            /// Enum MediumShading2Accent2 for "MediumShading2Accent2"
            /// </summary>
            [EnumMember(Value = "MediumShading2Accent2")]
            MediumShading2Accent2,
            
            /// <summary>
            /// Enum MediumShading2Accent3 for "MediumShading2Accent3"
            /// </summary>
            [EnumMember(Value = "MediumShading2Accent3")]
            MediumShading2Accent3,
            
            /// <summary>
            /// Enum MediumShading2Accent4 for "MediumShading2Accent4"
            /// </summary>
            [EnumMember(Value = "MediumShading2Accent4")]
            MediumShading2Accent4,
            
            /// <summary>
            /// Enum MediumShading2Accent5 for "MediumShading2Accent5"
            /// </summary>
            [EnumMember(Value = "MediumShading2Accent5")]
            MediumShading2Accent5,
            
            /// <summary>
            /// Enum MediumShading2Accent6 for "MediumShading2Accent6"
            /// </summary>
            [EnumMember(Value = "MediumShading2Accent6")]
            MediumShading2Accent6,
            
            /// <summary>
            /// Enum Table3DEffects1 for "Table3DEffects1"
            /// </summary>
            [EnumMember(Value = "Table3DEffects1")]
            Table3DEffects1,
            
            /// <summary>
            /// Enum Table3DEffects2 for "Table3DEffects2"
            /// </summary>
            [EnumMember(Value = "Table3DEffects2")]
            Table3DEffects2,
            
            /// <summary>
            /// Enum Table3DEffects3 for "Table3DEffects3"
            /// </summary>
            [EnumMember(Value = "Table3DEffects3")]
            Table3DEffects3,
            
            /// <summary>
            /// Enum TableClassic1 for "TableClassic1"
            /// </summary>
            [EnumMember(Value = "TableClassic1")]
            TableClassic1,
            
            /// <summary>
            /// Enum TableClassic2 for "TableClassic2"
            /// </summary>
            [EnumMember(Value = "TableClassic2")]
            TableClassic2,
            
            /// <summary>
            /// Enum TableClassic3 for "TableClassic3"
            /// </summary>
            [EnumMember(Value = "TableClassic3")]
            TableClassic3,
            
            /// <summary>
            /// Enum TableClassic4 for "TableClassic4"
            /// </summary>
            [EnumMember(Value = "TableClassic4")]
            TableClassic4,
            
            /// <summary>
            /// Enum TableColorful1 for "TableColorful1"
            /// </summary>
            [EnumMember(Value = "TableColorful1")]
            TableColorful1,
            
            /// <summary>
            /// Enum TableColorful2 for "TableColorful2"
            /// </summary>
            [EnumMember(Value = "TableColorful2")]
            TableColorful2,
            
            /// <summary>
            /// Enum TableColorful3 for "TableColorful3"
            /// </summary>
            [EnumMember(Value = "TableColorful3")]
            TableColorful3,
            
            /// <summary>
            /// Enum TableColumns1 for "TableColumns1"
            /// </summary>
            [EnumMember(Value = "TableColumns1")]
            TableColumns1,
            
            /// <summary>
            /// Enum TableColumns2 for "TableColumns2"
            /// </summary>
            [EnumMember(Value = "TableColumns2")]
            TableColumns2,
            
            /// <summary>
            /// Enum TableColumns3 for "TableColumns3"
            /// </summary>
            [EnumMember(Value = "TableColumns3")]
            TableColumns3,
            
            /// <summary>
            /// Enum TableColumns4 for "TableColumns4"
            /// </summary>
            [EnumMember(Value = "TableColumns4")]
            TableColumns4,
            
            /// <summary>
            /// Enum TableColumns5 for "TableColumns5"
            /// </summary>
            [EnumMember(Value = "TableColumns5")]
            TableColumns5,
            
            /// <summary>
            /// Enum TableContemporary for "TableContemporary"
            /// </summary>
            [EnumMember(Value = "TableContemporary")]
            TableContemporary,
            
            /// <summary>
            /// Enum TableElegant for "TableElegant"
            /// </summary>
            [EnumMember(Value = "TableElegant")]
            TableElegant,
            
            /// <summary>
            /// Enum TableGrid for "TableGrid"
            /// </summary>
            [EnumMember(Value = "TableGrid")]
            TableGrid,
            
            /// <summary>
            /// Enum TableGrid1 for "TableGrid1"
            /// </summary>
            [EnumMember(Value = "TableGrid1")]
            TableGrid1,
            
            /// <summary>
            /// Enum TableGrid2 for "TableGrid2"
            /// </summary>
            [EnumMember(Value = "TableGrid2")]
            TableGrid2,
            
            /// <summary>
            /// Enum TableGrid3 for "TableGrid3"
            /// </summary>
            [EnumMember(Value = "TableGrid3")]
            TableGrid3,
            
            /// <summary>
            /// Enum TableGrid4 for "TableGrid4"
            /// </summary>
            [EnumMember(Value = "TableGrid4")]
            TableGrid4,
            
            /// <summary>
            /// Enum TableGrid5 for "TableGrid5"
            /// </summary>
            [EnumMember(Value = "TableGrid5")]
            TableGrid5,
            
            /// <summary>
            /// Enum TableGrid6 for "TableGrid6"
            /// </summary>
            [EnumMember(Value = "TableGrid6")]
            TableGrid6,
            
            /// <summary>
            /// Enum TableGrid7 for "TableGrid7"
            /// </summary>
            [EnumMember(Value = "TableGrid7")]
            TableGrid7,
            
            /// <summary>
            /// Enum TableGrid8 for "TableGrid8"
            /// </summary>
            [EnumMember(Value = "TableGrid8")]
            TableGrid8,
            
            /// <summary>
            /// Enum TableList1 for "TableList1"
            /// </summary>
            [EnumMember(Value = "TableList1")]
            TableList1,
            
            /// <summary>
            /// Enum TableList2 for "TableList2"
            /// </summary>
            [EnumMember(Value = "TableList2")]
            TableList2,
            
            /// <summary>
            /// Enum TableList3 for "TableList3"
            /// </summary>
            [EnumMember(Value = "TableList3")]
            TableList3,
            
            /// <summary>
            /// Enum TableList4 for "TableList4"
            /// </summary>
            [EnumMember(Value = "TableList4")]
            TableList4,
            
            /// <summary>
            /// Enum TableList5 for "TableList5"
            /// </summary>
            [EnumMember(Value = "TableList5")]
            TableList5,
            
            /// <summary>
            /// Enum TableList6 for "TableList6"
            /// </summary>
            [EnumMember(Value = "TableList6")]
            TableList6,
            
            /// <summary>
            /// Enum TableList7 for "TableList7"
            /// </summary>
            [EnumMember(Value = "TableList7")]
            TableList7,
            
            /// <summary>
            /// Enum TableList8 for "TableList8"
            /// </summary>
            [EnumMember(Value = "TableList8")]
            TableList8,
            
            /// <summary>
            /// Enum TableNormal for "TableNormal"
            /// </summary>
            [EnumMember(Value = "TableNormal")]
            TableNormal,
            
            /// <summary>
            /// Enum TableProfessional for "TableProfessional"
            /// </summary>
            [EnumMember(Value = "TableProfessional")]
            TableProfessional,
            
            /// <summary>
            /// Enum TableSimple1 for "TableSimple1"
            /// </summary>
            [EnumMember(Value = "TableSimple1")]
            TableSimple1,
            
            /// <summary>
            /// Enum TableSimple2 for "TableSimple2"
            /// </summary>
            [EnumMember(Value = "TableSimple2")]
            TableSimple2,
            
            /// <summary>
            /// Enum TableSimple3 for "TableSimple3"
            /// </summary>
            [EnumMember(Value = "TableSimple3")]
            TableSimple3,
            
            /// <summary>
            /// Enum TableSubtle1 for "TableSubtle1"
            /// </summary>
            [EnumMember(Value = "TableSubtle1")]
            TableSubtle1,
            
            /// <summary>
            /// Enum TableSubtle2 for "TableSubtle2"
            /// </summary>
            [EnumMember(Value = "TableSubtle2")]
            TableSubtle2,
            
            /// <summary>
            /// Enum TableTheme for "TableTheme"
            /// </summary>
            [EnumMember(Value = "TableTheme")]
            TableTheme,
            
            /// <summary>
            /// Enum TableWeb1 for "TableWeb1"
            /// </summary>
            [EnumMember(Value = "TableWeb1")]
            TableWeb1,
            
            /// <summary>
            /// Enum TableWeb2 for "TableWeb2"
            /// </summary>
            [EnumMember(Value = "TableWeb2")]
            TableWeb2,
            
            /// <summary>
            /// Enum TableWeb3 for "TableWeb3"
            /// </summary>
            [EnumMember(Value = "TableWeb3")]
            TableWeb3,
            
            /// <summary>
            /// Enum PlainTable1 for "PlainTable1"
            /// </summary>
            [EnumMember(Value = "PlainTable1")]
            PlainTable1,
            
            /// <summary>
            /// Enum PlainTable2 for "PlainTable2"
            /// </summary>
            [EnumMember(Value = "PlainTable2")]
            PlainTable2,
            
            /// <summary>
            /// Enum PlainTable3 for "PlainTable3"
            /// </summary>
            [EnumMember(Value = "PlainTable3")]
            PlainTable3,
            
            /// <summary>
            /// Enum PlainTable4 for "PlainTable4"
            /// </summary>
            [EnumMember(Value = "PlainTable4")]
            PlainTable4,
            
            /// <summary>
            /// Enum PlainTable5 for "PlainTable5"
            /// </summary>
            [EnumMember(Value = "PlainTable5")]
            PlainTable5,
            
            /// <summary>
            /// Enum TableGridLight for "TableGridLight"
            /// </summary>
            [EnumMember(Value = "TableGridLight")]
            TableGridLight,
            
            /// <summary>
            /// Enum GridTable1Light for "GridTable1Light"
            /// </summary>
            [EnumMember(Value = "GridTable1Light")]
            GridTable1Light,
            
            /// <summary>
            /// Enum GridTable2 for "GridTable2"
            /// </summary>
            [EnumMember(Value = "GridTable2")]
            GridTable2,
            
            /// <summary>
            /// Enum GridTable3 for "GridTable3"
            /// </summary>
            [EnumMember(Value = "GridTable3")]
            GridTable3,
            
            /// <summary>
            /// Enum GridTable4 for "GridTable4"
            /// </summary>
            [EnumMember(Value = "GridTable4")]
            GridTable4,
            
            /// <summary>
            /// Enum GridTable5Dark for "GridTable5Dark"
            /// </summary>
            [EnumMember(Value = "GridTable5Dark")]
            GridTable5Dark,
            
            /// <summary>
            /// Enum GridTable6Colorful for "GridTable6Colorful"
            /// </summary>
            [EnumMember(Value = "GridTable6Colorful")]
            GridTable6Colorful,
            
            /// <summary>
            /// Enum GridTable7Colorful for "GridTable7Colorful"
            /// </summary>
            [EnumMember(Value = "GridTable7Colorful")]
            GridTable7Colorful,
            
            /// <summary>
            /// Enum GridTable1LightAccent1 for "GridTable1LightAccent1"
            /// </summary>
            [EnumMember(Value = "GridTable1LightAccent1")]
            GridTable1LightAccent1,
            
            /// <summary>
            /// Enum GridTable2Accent1 for "GridTable2Accent1"
            /// </summary>
            [EnumMember(Value = "GridTable2Accent1")]
            GridTable2Accent1,
            
            /// <summary>
            /// Enum GridTable3Accent1 for "GridTable3Accent1"
            /// </summary>
            [EnumMember(Value = "GridTable3Accent1")]
            GridTable3Accent1,
            
            /// <summary>
            /// Enum GridTable4Accent1 for "GridTable4Accent1"
            /// </summary>
            [EnumMember(Value = "GridTable4Accent1")]
            GridTable4Accent1,
            
            /// <summary>
            /// Enum GridTable5DarkAccent1 for "GridTable5DarkAccent1"
            /// </summary>
            [EnumMember(Value = "GridTable5DarkAccent1")]
            GridTable5DarkAccent1,
            
            /// <summary>
            /// Enum GridTable6ColorfulAccent1 for "GridTable6ColorfulAccent1"
            /// </summary>
            [EnumMember(Value = "GridTable6ColorfulAccent1")]
            GridTable6ColorfulAccent1,
            
            /// <summary>
            /// Enum GridTable7ColorfulAccent1 for "GridTable7ColorfulAccent1"
            /// </summary>
            [EnumMember(Value = "GridTable7ColorfulAccent1")]
            GridTable7ColorfulAccent1,
            
            /// <summary>
            /// Enum GridTable1LightAccent2 for "GridTable1LightAccent2"
            /// </summary>
            [EnumMember(Value = "GridTable1LightAccent2")]
            GridTable1LightAccent2,
            
            /// <summary>
            /// Enum GridTable2Accent2 for "GridTable2Accent2"
            /// </summary>
            [EnumMember(Value = "GridTable2Accent2")]
            GridTable2Accent2,
            
            /// <summary>
            /// Enum GridTable3Accent2 for "GridTable3Accent2"
            /// </summary>
            [EnumMember(Value = "GridTable3Accent2")]
            GridTable3Accent2,
            
            /// <summary>
            /// Enum GridTable4Accent2 for "GridTable4Accent2"
            /// </summary>
            [EnumMember(Value = "GridTable4Accent2")]
            GridTable4Accent2,
            
            /// <summary>
            /// Enum GridTable5DarkAccent2 for "GridTable5DarkAccent2"
            /// </summary>
            [EnumMember(Value = "GridTable5DarkAccent2")]
            GridTable5DarkAccent2,
            
            /// <summary>
            /// Enum GridTable6ColorfulAccent2 for "GridTable6ColorfulAccent2"
            /// </summary>
            [EnumMember(Value = "GridTable6ColorfulAccent2")]
            GridTable6ColorfulAccent2,
            
            /// <summary>
            /// Enum GridTable7ColorfulAccent2 for "GridTable7ColorfulAccent2"
            /// </summary>
            [EnumMember(Value = "GridTable7ColorfulAccent2")]
            GridTable7ColorfulAccent2,
            
            /// <summary>
            /// Enum GridTable1LightAccent3 for "GridTable1LightAccent3"
            /// </summary>
            [EnumMember(Value = "GridTable1LightAccent3")]
            GridTable1LightAccent3,
            
            /// <summary>
            /// Enum GridTable2Accent3 for "GridTable2Accent3"
            /// </summary>
            [EnumMember(Value = "GridTable2Accent3")]
            GridTable2Accent3,
            
            /// <summary>
            /// Enum GridTable3Accent3 for "GridTable3Accent3"
            /// </summary>
            [EnumMember(Value = "GridTable3Accent3")]
            GridTable3Accent3,
            
            /// <summary>
            /// Enum GridTable4Accent3 for "GridTable4Accent3"
            /// </summary>
            [EnumMember(Value = "GridTable4Accent3")]
            GridTable4Accent3,
            
            /// <summary>
            /// Enum GridTable5DarkAccent3 for "GridTable5DarkAccent3"
            /// </summary>
            [EnumMember(Value = "GridTable5DarkAccent3")]
            GridTable5DarkAccent3,
            
            /// <summary>
            /// Enum GridTable6ColorfulAccent3 for "GridTable6ColorfulAccent3"
            /// </summary>
            [EnumMember(Value = "GridTable6ColorfulAccent3")]
            GridTable6ColorfulAccent3,
            
            /// <summary>
            /// Enum GridTable7ColorfulAccent3 for "GridTable7ColorfulAccent3"
            /// </summary>
            [EnumMember(Value = "GridTable7ColorfulAccent3")]
            GridTable7ColorfulAccent3,
            
            /// <summary>
            /// Enum GridTable1LightAccent4 for "GridTable1LightAccent4"
            /// </summary>
            [EnumMember(Value = "GridTable1LightAccent4")]
            GridTable1LightAccent4,
            
            /// <summary>
            /// Enum GridTable2Accent4 for "GridTable2Accent4"
            /// </summary>
            [EnumMember(Value = "GridTable2Accent4")]
            GridTable2Accent4,
            
            /// <summary>
            /// Enum GridTable3Accent4 for "GridTable3Accent4"
            /// </summary>
            [EnumMember(Value = "GridTable3Accent4")]
            GridTable3Accent4,
            
            /// <summary>
            /// Enum GridTable4Accent4 for "GridTable4Accent4"
            /// </summary>
            [EnumMember(Value = "GridTable4Accent4")]
            GridTable4Accent4,
            
            /// <summary>
            /// Enum GridTable5DarkAccent4 for "GridTable5DarkAccent4"
            /// </summary>
            [EnumMember(Value = "GridTable5DarkAccent4")]
            GridTable5DarkAccent4,
            
            /// <summary>
            /// Enum GridTable6ColorfulAccent4 for "GridTable6ColorfulAccent4"
            /// </summary>
            [EnumMember(Value = "GridTable6ColorfulAccent4")]
            GridTable6ColorfulAccent4,
            
            /// <summary>
            /// Enum GridTable7ColorfulAccent4 for "GridTable7ColorfulAccent4"
            /// </summary>
            [EnumMember(Value = "GridTable7ColorfulAccent4")]
            GridTable7ColorfulAccent4,
            
            /// <summary>
            /// Enum GridTable1LightAccent5 for "GridTable1LightAccent5"
            /// </summary>
            [EnumMember(Value = "GridTable1LightAccent5")]
            GridTable1LightAccent5,
            
            /// <summary>
            /// Enum GridTable2Accent5 for "GridTable2Accent5"
            /// </summary>
            [EnumMember(Value = "GridTable2Accent5")]
            GridTable2Accent5,
            
            /// <summary>
            /// Enum GridTable3Accent5 for "GridTable3Accent5"
            /// </summary>
            [EnumMember(Value = "GridTable3Accent5")]
            GridTable3Accent5,
            
            /// <summary>
            /// Enum GridTable4Accent5 for "GridTable4Accent5"
            /// </summary>
            [EnumMember(Value = "GridTable4Accent5")]
            GridTable4Accent5,
            
            /// <summary>
            /// Enum GridTable5DarkAccent5 for "GridTable5DarkAccent5"
            /// </summary>
            [EnumMember(Value = "GridTable5DarkAccent5")]
            GridTable5DarkAccent5,
            
            /// <summary>
            /// Enum GridTable6ColorfulAccent5 for "GridTable6ColorfulAccent5"
            /// </summary>
            [EnumMember(Value = "GridTable6ColorfulAccent5")]
            GridTable6ColorfulAccent5,
            
            /// <summary>
            /// Enum GridTable7ColorfulAccent5 for "GridTable7ColorfulAccent5"
            /// </summary>
            [EnumMember(Value = "GridTable7ColorfulAccent5")]
            GridTable7ColorfulAccent5,
            
            /// <summary>
            /// Enum GridTable1LightAccent6 for "GridTable1LightAccent6"
            /// </summary>
            [EnumMember(Value = "GridTable1LightAccent6")]
            GridTable1LightAccent6,
            
            /// <summary>
            /// Enum GridTable2Accent6 for "GridTable2Accent6"
            /// </summary>
            [EnumMember(Value = "GridTable2Accent6")]
            GridTable2Accent6,
            
            /// <summary>
            /// Enum GridTable3Accent6 for "GridTable3Accent6"
            /// </summary>
            [EnumMember(Value = "GridTable3Accent6")]
            GridTable3Accent6,
            
            /// <summary>
            /// Enum GridTable4Accent6 for "GridTable4Accent6"
            /// </summary>
            [EnumMember(Value = "GridTable4Accent6")]
            GridTable4Accent6,
            
            /// <summary>
            /// Enum GridTable5DarkAccent6 for "GridTable5DarkAccent6"
            /// </summary>
            [EnumMember(Value = "GridTable5DarkAccent6")]
            GridTable5DarkAccent6,
            
            /// <summary>
            /// Enum GridTable6ColorfulAccent6 for "GridTable6ColorfulAccent6"
            /// </summary>
            [EnumMember(Value = "GridTable6ColorfulAccent6")]
            GridTable6ColorfulAccent6,
            
            /// <summary>
            /// Enum GridTable7ColorfulAccent6 for "GridTable7ColorfulAccent6"
            /// </summary>
            [EnumMember(Value = "GridTable7ColorfulAccent6")]
            GridTable7ColorfulAccent6,
            
            /// <summary>
            /// Enum ListTable1Light for "ListTable1Light"
            /// </summary>
            [EnumMember(Value = "ListTable1Light")]
            ListTable1Light,
            
            /// <summary>
            /// Enum ListTable2 for "ListTable2"
            /// </summary>
            [EnumMember(Value = "ListTable2")]
            ListTable2,
            
            /// <summary>
            /// Enum ListTable3 for "ListTable3"
            /// </summary>
            [EnumMember(Value = "ListTable3")]
            ListTable3,
            
            /// <summary>
            /// Enum ListTable4 for "ListTable4"
            /// </summary>
            [EnumMember(Value = "ListTable4")]
            ListTable4,
            
            /// <summary>
            /// Enum ListTable5Dark for "ListTable5Dark"
            /// </summary>
            [EnumMember(Value = "ListTable5Dark")]
            ListTable5Dark,
            
            /// <summary>
            /// Enum ListTable6Colorful for "ListTable6Colorful"
            /// </summary>
            [EnumMember(Value = "ListTable6Colorful")]
            ListTable6Colorful,
            
            /// <summary>
            /// Enum ListTable7Colorful for "ListTable7Colorful"
            /// </summary>
            [EnumMember(Value = "ListTable7Colorful")]
            ListTable7Colorful,
            
            /// <summary>
            /// Enum ListTable1LightAccent1 for "ListTable1LightAccent1"
            /// </summary>
            [EnumMember(Value = "ListTable1LightAccent1")]
            ListTable1LightAccent1,
            
            /// <summary>
            /// Enum ListTable2Accent1 for "ListTable2Accent1"
            /// </summary>
            [EnumMember(Value = "ListTable2Accent1")]
            ListTable2Accent1,
            
            /// <summary>
            /// Enum ListTable3Accent1 for "ListTable3Accent1"
            /// </summary>
            [EnumMember(Value = "ListTable3Accent1")]
            ListTable3Accent1,
            
            /// <summary>
            /// Enum ListTable4Accent1 for "ListTable4Accent1"
            /// </summary>
            [EnumMember(Value = "ListTable4Accent1")]
            ListTable4Accent1,
            
            /// <summary>
            /// Enum ListTable5DarkAccent1 for "ListTable5DarkAccent1"
            /// </summary>
            [EnumMember(Value = "ListTable5DarkAccent1")]
            ListTable5DarkAccent1,
            
            /// <summary>
            /// Enum ListTable6ColorfulAccent1 for "ListTable6ColorfulAccent1"
            /// </summary>
            [EnumMember(Value = "ListTable6ColorfulAccent1")]
            ListTable6ColorfulAccent1,
            
            /// <summary>
            /// Enum ListTable7ColorfulAccent1 for "ListTable7ColorfulAccent1"
            /// </summary>
            [EnumMember(Value = "ListTable7ColorfulAccent1")]
            ListTable7ColorfulAccent1,
            
            /// <summary>
            /// Enum ListTable1LightAccent2 for "ListTable1LightAccent2"
            /// </summary>
            [EnumMember(Value = "ListTable1LightAccent2")]
            ListTable1LightAccent2,
            
            /// <summary>
            /// Enum ListTable2Accent2 for "ListTable2Accent2"
            /// </summary>
            [EnumMember(Value = "ListTable2Accent2")]
            ListTable2Accent2,
            
            /// <summary>
            /// Enum ListTable3Accent2 for "ListTable3Accent2"
            /// </summary>
            [EnumMember(Value = "ListTable3Accent2")]
            ListTable3Accent2,
            
            /// <summary>
            /// Enum ListTable4Accent2 for "ListTable4Accent2"
            /// </summary>
            [EnumMember(Value = "ListTable4Accent2")]
            ListTable4Accent2,
            
            /// <summary>
            /// Enum ListTable5DarkAccent2 for "ListTable5DarkAccent2"
            /// </summary>
            [EnumMember(Value = "ListTable5DarkAccent2")]
            ListTable5DarkAccent2,
            
            /// <summary>
            /// Enum ListTable6ColorfulAccent2 for "ListTable6ColorfulAccent2"
            /// </summary>
            [EnumMember(Value = "ListTable6ColorfulAccent2")]
            ListTable6ColorfulAccent2,
            
            /// <summary>
            /// Enum ListTable7ColorfulAccent2 for "ListTable7ColorfulAccent2"
            /// </summary>
            [EnumMember(Value = "ListTable7ColorfulAccent2")]
            ListTable7ColorfulAccent2,
            
            /// <summary>
            /// Enum ListTable1LightAccent3 for "ListTable1LightAccent3"
            /// </summary>
            [EnumMember(Value = "ListTable1LightAccent3")]
            ListTable1LightAccent3,
            
            /// <summary>
            /// Enum ListTable2Accent3 for "ListTable2Accent3"
            /// </summary>
            [EnumMember(Value = "ListTable2Accent3")]
            ListTable2Accent3,
            
            /// <summary>
            /// Enum ListTable3Accent3 for "ListTable3Accent3"
            /// </summary>
            [EnumMember(Value = "ListTable3Accent3")]
            ListTable3Accent3,
            
            /// <summary>
            /// Enum ListTable4Accent3 for "ListTable4Accent3"
            /// </summary>
            [EnumMember(Value = "ListTable4Accent3")]
            ListTable4Accent3,
            
            /// <summary>
            /// Enum ListTable5DarkAccent3 for "ListTable5DarkAccent3"
            /// </summary>
            [EnumMember(Value = "ListTable5DarkAccent3")]
            ListTable5DarkAccent3,
            
            /// <summary>
            /// Enum ListTable6ColorfulAccent3 for "ListTable6ColorfulAccent3"
            /// </summary>
            [EnumMember(Value = "ListTable6ColorfulAccent3")]
            ListTable6ColorfulAccent3,
            
            /// <summary>
            /// Enum ListTable7ColorfulAccent3 for "ListTable7ColorfulAccent3"
            /// </summary>
            [EnumMember(Value = "ListTable7ColorfulAccent3")]
            ListTable7ColorfulAccent3,
            
            /// <summary>
            /// Enum ListTable1LightAccent4 for "ListTable1LightAccent4"
            /// </summary>
            [EnumMember(Value = "ListTable1LightAccent4")]
            ListTable1LightAccent4,
            
            /// <summary>
            /// Enum ListTable2Accent4 for "ListTable2Accent4"
            /// </summary>
            [EnumMember(Value = "ListTable2Accent4")]
            ListTable2Accent4,
            
            /// <summary>
            /// Enum ListTable3Accent4 for "ListTable3Accent4"
            /// </summary>
            [EnumMember(Value = "ListTable3Accent4")]
            ListTable3Accent4,
            
            /// <summary>
            /// Enum ListTable4Accent4 for "ListTable4Accent4"
            /// </summary>
            [EnumMember(Value = "ListTable4Accent4")]
            ListTable4Accent4,
            
            /// <summary>
            /// Enum ListTable5DarkAccent4 for "ListTable5DarkAccent4"
            /// </summary>
            [EnumMember(Value = "ListTable5DarkAccent4")]
            ListTable5DarkAccent4,
            
            /// <summary>
            /// Enum ListTable6ColorfulAccent4 for "ListTable6ColorfulAccent4"
            /// </summary>
            [EnumMember(Value = "ListTable6ColorfulAccent4")]
            ListTable6ColorfulAccent4,
            
            /// <summary>
            /// Enum ListTable7ColorfulAccent4 for "ListTable7ColorfulAccent4"
            /// </summary>
            [EnumMember(Value = "ListTable7ColorfulAccent4")]
            ListTable7ColorfulAccent4,
            
            /// <summary>
            /// Enum ListTable1LightAccent5 for "ListTable1LightAccent5"
            /// </summary>
            [EnumMember(Value = "ListTable1LightAccent5")]
            ListTable1LightAccent5,
            
            /// <summary>
            /// Enum ListTable2Accent5 for "ListTable2Accent5"
            /// </summary>
            [EnumMember(Value = "ListTable2Accent5")]
            ListTable2Accent5,
            
            /// <summary>
            /// Enum ListTable3Accent5 for "ListTable3Accent5"
            /// </summary>
            [EnumMember(Value = "ListTable3Accent5")]
            ListTable3Accent5,
            
            /// <summary>
            /// Enum ListTable4Accent5 for "ListTable4Accent5"
            /// </summary>
            [EnumMember(Value = "ListTable4Accent5")]
            ListTable4Accent5,
            
            /// <summary>
            /// Enum ListTable5DarkAccent5 for "ListTable5DarkAccent5"
            /// </summary>
            [EnumMember(Value = "ListTable5DarkAccent5")]
            ListTable5DarkAccent5,
            
            /// <summary>
            /// Enum ListTable6ColorfulAccent5 for "ListTable6ColorfulAccent5"
            /// </summary>
            [EnumMember(Value = "ListTable6ColorfulAccent5")]
            ListTable6ColorfulAccent5,
            
            /// <summary>
            /// Enum ListTable7ColorfulAccent5 for "ListTable7ColorfulAccent5"
            /// </summary>
            [EnumMember(Value = "ListTable7ColorfulAccent5")]
            ListTable7ColorfulAccent5,
            
            /// <summary>
            /// Enum ListTable1LightAccent6 for "ListTable1LightAccent6"
            /// </summary>
            [EnumMember(Value = "ListTable1LightAccent6")]
            ListTable1LightAccent6,
            
            /// <summary>
            /// Enum ListTable2Accent6 for "ListTable2Accent6"
            /// </summary>
            [EnumMember(Value = "ListTable2Accent6")]
            ListTable2Accent6,
            
            /// <summary>
            /// Enum ListTable3Accent6 for "ListTable3Accent6"
            /// </summary>
            [EnumMember(Value = "ListTable3Accent6")]
            ListTable3Accent6,
            
            /// <summary>
            /// Enum ListTable4Accent6 for "ListTable4Accent6"
            /// </summary>
            [EnumMember(Value = "ListTable4Accent6")]
            ListTable4Accent6,
            
            /// <summary>
            /// Enum ListTable5DarkAccent6 for "ListTable5DarkAccent6"
            /// </summary>
            [EnumMember(Value = "ListTable5DarkAccent6")]
            ListTable5DarkAccent6,
            
            /// <summary>
            /// Enum ListTable6ColorfulAccent6 for "ListTable6ColorfulAccent6"
            /// </summary>
            [EnumMember(Value = "ListTable6ColorfulAccent6")]
            ListTable6ColorfulAccent6,
            
            /// <summary>
            /// Enum ListTable7ColorfulAccent6 for "ListTable7ColorfulAccent6"
            /// </summary>
            [EnumMember(Value = "ListTable7ColorfulAccent6")]
            ListTable7ColorfulAccent6,
            
            /// <summary>
            /// Enum User for "User"
            /// </summary>
            [EnumMember(Value = "User")]
            User,
            
            /// <summary>
            /// Enum Nil for "Nil"
            /// </summary>
            [EnumMember(Value = "Nil")]
            Nil
        }

        /// <summary>
        /// Gets or sets bit flags that specify how a table style is applied to this table.
        /// </summary>
        /// <value>Gets or sets bit flags that specify how a table style is applied to this table.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StyleOptionsEnum
        {
            
            /// <summary>
            /// Enum None for "None"
            /// </summary>
            [EnumMember(Value = "None")]
            None,
            
            /// <summary>
            /// Enum FirstRow for "FirstRow"
            /// </summary>
            [EnumMember(Value = "FirstRow")]
            FirstRow,
            
            /// <summary>
            /// Enum LastRow for "LastRow"
            /// </summary>
            [EnumMember(Value = "LastRow")]
            LastRow,
            
            /// <summary>
            /// Enum FirstColumn for "FirstColumn"
            /// </summary>
            [EnumMember(Value = "FirstColumn")]
            FirstColumn,
            
            /// <summary>
            /// Enum LastColumn for "LastColumn"
            /// </summary>
            [EnumMember(Value = "LastColumn")]
            LastColumn,
            
            /// <summary>
            /// Enum RowBands for "RowBands"
            /// </summary>
            [EnumMember(Value = "RowBands")]
            RowBands,
            
            /// <summary>
            /// Enum ColumnBands for "ColumnBands"
            /// </summary>
            [EnumMember(Value = "ColumnBands")]
            ColumnBands,
            
            /// <summary>
            /// Enum Default2003 for "Default2003"
            /// </summary>
            [EnumMember(Value = "Default2003")]
            Default2003,
            
            /// <summary>
            /// Enum Default for "Default"
            /// </summary>
            [EnumMember(Value = "Default")]
            Default
        }

        /// <summary>
        /// Get or sets TextWrapping {Aspose.Words.Cloud.DTO.DocumentElements.Tables.TablePropertiesDto.TextWrapping} for table.
        /// </summary>
        /// <value>Get or sets TextWrapping {Aspose.Words.Cloud.DTO.DocumentElements.Tables.TablePropertiesDto.TextWrapping} for table.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TextWrappingEnum
        {
            
            /// <summary>
            /// Enum None for "None"
            /// </summary>
            [EnumMember(Value = "None")]
            None,
            
            /// <summary>
            /// Enum Around for "Around"
            /// </summary>
            [EnumMember(Value = "Around")]
            Around,
            
            /// <summary>
            /// Enum Default for "Default"
            /// </summary>
            [EnumMember(Value = "Default")]
            Default
        }

        /// <summary>
        /// Specifies how an inline table is aligned in the document.
        /// </summary>
        /// <value>Specifies how an inline table is aligned in the document.</value>
        [DataMember(Name="Alignment", EmitDefaultValue=false)]
        public AlignmentEnum? Alignment { get; set; }
        /// <summary>
        /// Gets or sets the locale independent style identifier of the table style applied to this table.
        /// </summary>
        /// <value>Gets or sets the locale independent style identifier of the table style applied to this table.</value>
        [DataMember(Name="StyleIdentifier", EmitDefaultValue=false)]
        public StyleIdentifierEnum? StyleIdentifier { get; set; }
        /// <summary>
        /// Gets or sets bit flags that specify how a table style is applied to this table.
        /// </summary>
        /// <value>Gets or sets bit flags that specify how a table style is applied to this table.</value>
        [DataMember(Name="StyleOptions", EmitDefaultValue=false)]
        public StyleOptionsEnum? StyleOptions { get; set; }
        /// <summary>
        /// Get or sets TextWrapping {Aspose.Words.Cloud.DTO.DocumentElements.Tables.TablePropertiesDto.TextWrapping} for table.
        /// </summary>
        /// <value>Get or sets TextWrapping {Aspose.Words.Cloud.DTO.DocumentElements.Tables.TablePropertiesDto.TextWrapping} for table.</value>
        [DataMember(Name="TextWrapping", EmitDefaultValue=false)]
        public TextWrappingEnum? TextWrapping { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto" /> class.
        /// </summary>
        /// <param name="Alignment">Specifies how an inline table is aligned in the document..</param>
        /// <param name="AllowAutoFit">Allows Microsoft Word and Aspose.Words to automatically resize cells in a table to fit their contents..</param>
        /// <param name="Bidi">Gets or sets whether this is a right-to-left table..</param>
        /// <param name="BottomPadding">Gets or sets the amount of space (in points) to add below the contents of cells..</param>
        /// <param name="CellSpacing">Gets or sets the amount of space (in points) between the cells..</param>
        /// <param name="LeftIndent">Gets or sets the value that represents the left indent of the table..</param>
        /// <param name="LeftPadding">Gets or sets the amount of space (in points) to add to the left of the contents of cells..</param>
        /// <param name="PreferredWidth">Gets or sets the table preferred width.   &lt;para&gt;Preferred width can be specified as a percentage, number of points or a special \&quot;auto\&quot; value.&lt;/para&gt;.</param>
        /// <param name="RightPadding">Gets or sets the amount of space (in points) to add to the right of the contents of cells..</param>
        /// <param name="StyleIdentifier">Gets or sets the locale independent style identifier of the table style applied to this table..</param>
        /// <param name="StyleName">Gets or sets the name of the table style applied to this table..</param>
        /// <param name="StyleOptions">Gets or sets bit flags that specify how a table style is applied to this table..</param>
        /// <param name="TextWrapping">Get or sets TextWrapping {Aspose.Words.Cloud.DTO.DocumentElements.Tables.TablePropertiesDto.TextWrapping} for table..</param>
        /// <param name="TopPadding">Gets or sets the amount of space (in points) to add above the contents of cells..</param>
        /// <param name="Link">Link to the document..</param>
        public AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto(AlignmentEnum? Alignment = default(AlignmentEnum?), bool? AllowAutoFit = default(bool?), bool? Bidi = default(bool?), double? BottomPadding = default(double?), double? CellSpacing = default(double?), double? LeftIndent = default(double?), double? LeftPadding = default(double?), AsposeWordsCloudDTODocumentElementsTablesPreferredWidthDto PreferredWidth = default(AsposeWordsCloudDTODocumentElementsTablesPreferredWidthDto), double? RightPadding = default(double?), StyleIdentifierEnum? StyleIdentifier = default(StyleIdentifierEnum?), string StyleName = default(string), StyleOptionsEnum? StyleOptions = default(StyleOptionsEnum?), TextWrappingEnum? TextWrapping = default(TextWrappingEnum?), double? TopPadding = default(double?), AsposeWordsCloudDTOCommonWordsApiLink Link = default(AsposeWordsCloudDTOCommonWordsApiLink))
        {
            this.Alignment = Alignment;
            this.AllowAutoFit = AllowAutoFit;
            this.Bidi = Bidi;
            this.BottomPadding = BottomPadding;
            this.CellSpacing = CellSpacing;
            this.LeftIndent = LeftIndent;
            this.LeftPadding = LeftPadding;
            this.PreferredWidth = PreferredWidth;
            this.RightPadding = RightPadding;
            this.StyleIdentifier = StyleIdentifier;
            this.StyleName = StyleName;
            this.StyleOptions = StyleOptions;
            this.TextWrapping = TextWrapping;
            this.TopPadding = TopPadding;
            this.Link = Link;
        }
        

        /// <summary>
        /// Allows Microsoft Word and Aspose.Words to automatically resize cells in a table to fit their contents.
        /// </summary>
        /// <value>Allows Microsoft Word and Aspose.Words to automatically resize cells in a table to fit their contents.</value>
        [DataMember(Name="AllowAutoFit", EmitDefaultValue=false)]
        public bool? AllowAutoFit { get; set; }

        /// <summary>
        /// Gets or sets whether this is a right-to-left table.
        /// </summary>
        /// <value>Gets or sets whether this is a right-to-left table.</value>
        [DataMember(Name="Bidi", EmitDefaultValue=false)]
        public bool? Bidi { get; set; }

        /// <summary>
        /// Gets or sets the amount of space (in points) to add below the contents of cells.
        /// </summary>
        /// <value>Gets or sets the amount of space (in points) to add below the contents of cells.</value>
        [DataMember(Name="BottomPadding", EmitDefaultValue=false)]
        public double? BottomPadding { get; set; }

        /// <summary>
        /// Gets or sets the amount of space (in points) between the cells.
        /// </summary>
        /// <value>Gets or sets the amount of space (in points) between the cells.</value>
        [DataMember(Name="CellSpacing", EmitDefaultValue=false)]
        public double? CellSpacing { get; set; }

        /// <summary>
        /// Gets or sets the value that represents the left indent of the table.
        /// </summary>
        /// <value>Gets or sets the value that represents the left indent of the table.</value>
        [DataMember(Name="LeftIndent", EmitDefaultValue=false)]
        public double? LeftIndent { get; set; }

        /// <summary>
        /// Gets or sets the amount of space (in points) to add to the left of the contents of cells.
        /// </summary>
        /// <value>Gets or sets the amount of space (in points) to add to the left of the contents of cells.</value>
        [DataMember(Name="LeftPadding", EmitDefaultValue=false)]
        public double? LeftPadding { get; set; }

        /// <summary>
        /// Gets or sets the table preferred width.   &lt;para&gt;Preferred width can be specified as a percentage, number of points or a special \&quot;auto\&quot; value.&lt;/para&gt;
        /// </summary>
        /// <value>Gets or sets the table preferred width.   &lt;para&gt;Preferred width can be specified as a percentage, number of points or a special \&quot;auto\&quot; value.&lt;/para&gt;</value>
        [DataMember(Name="PreferredWidth", EmitDefaultValue=false)]
        public AsposeWordsCloudDTODocumentElementsTablesPreferredWidthDto PreferredWidth { get; set; }

        /// <summary>
        /// Gets or sets the amount of space (in points) to add to the right of the contents of cells.
        /// </summary>
        /// <value>Gets or sets the amount of space (in points) to add to the right of the contents of cells.</value>
        [DataMember(Name="RightPadding", EmitDefaultValue=false)]
        public double? RightPadding { get; set; }


        /// <summary>
        /// Gets or sets the name of the table style applied to this table.
        /// </summary>
        /// <value>Gets or sets the name of the table style applied to this table.</value>
        [DataMember(Name="StyleName", EmitDefaultValue=false)]
        public string StyleName { get; set; }



        /// <summary>
        /// Gets or sets the amount of space (in points) to add above the contents of cells.
        /// </summary>
        /// <value>Gets or sets the amount of space (in points) to add above the contents of cells.</value>
        [DataMember(Name="TopPadding", EmitDefaultValue=false)]
        public double? TopPadding { get; set; }

        /// <summary>
        /// Link to the document.
        /// </summary>
        /// <value>Link to the document.</value>
        [DataMember(Name="link", EmitDefaultValue=false)]
        public AsposeWordsCloudDTOCommonWordsApiLink Link { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto {\n");
            sb.Append("  Alignment: ").Append(Alignment).Append("\n");
            sb.Append("  AllowAutoFit: ").Append(AllowAutoFit).Append("\n");
            sb.Append("  Bidi: ").Append(Bidi).Append("\n");
            sb.Append("  BottomPadding: ").Append(BottomPadding).Append("\n");
            sb.Append("  CellSpacing: ").Append(CellSpacing).Append("\n");
            sb.Append("  LeftIndent: ").Append(LeftIndent).Append("\n");
            sb.Append("  LeftPadding: ").Append(LeftPadding).Append("\n");
            sb.Append("  PreferredWidth: ").Append(PreferredWidth).Append("\n");
            sb.Append("  RightPadding: ").Append(RightPadding).Append("\n");
            sb.Append("  StyleIdentifier: ").Append(StyleIdentifier).Append("\n");
            sb.Append("  StyleName: ").Append(StyleName).Append("\n");
            sb.Append("  StyleOptions: ").Append(StyleOptions).Append("\n");
            sb.Append("  TextWrapping: ").Append(TextWrapping).Append("\n");
            sb.Append("  TopPadding: ").Append(TopPadding).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto);
        }

        /// <summary>
        /// Returns true if AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto instances are equal
        /// </summary>
        /// <param name="other">Instance of AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AsposeWordsCloudDTODocumentElementsTablesTablePropertiesDto other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Alignment == other.Alignment ||
                    this.Alignment != null &&
                    this.Alignment.Equals(other.Alignment)
                ) && 
                (
                    this.AllowAutoFit == other.AllowAutoFit ||
                    this.AllowAutoFit != null &&
                    this.AllowAutoFit.Equals(other.AllowAutoFit)
                ) && 
                (
                    this.Bidi == other.Bidi ||
                    this.Bidi != null &&
                    this.Bidi.Equals(other.Bidi)
                ) && 
                (
                    this.BottomPadding == other.BottomPadding ||
                    this.BottomPadding != null &&
                    this.BottomPadding.Equals(other.BottomPadding)
                ) && 
                (
                    this.CellSpacing == other.CellSpacing ||
                    this.CellSpacing != null &&
                    this.CellSpacing.Equals(other.CellSpacing)
                ) && 
                (
                    this.LeftIndent == other.LeftIndent ||
                    this.LeftIndent != null &&
                    this.LeftIndent.Equals(other.LeftIndent)
                ) && 
                (
                    this.LeftPadding == other.LeftPadding ||
                    this.LeftPadding != null &&
                    this.LeftPadding.Equals(other.LeftPadding)
                ) && 
                (
                    this.PreferredWidth == other.PreferredWidth ||
                    this.PreferredWidth != null &&
                    this.PreferredWidth.Equals(other.PreferredWidth)
                ) && 
                (
                    this.RightPadding == other.RightPadding ||
                    this.RightPadding != null &&
                    this.RightPadding.Equals(other.RightPadding)
                ) && 
                (
                    this.StyleIdentifier == other.StyleIdentifier ||
                    this.StyleIdentifier != null &&
                    this.StyleIdentifier.Equals(other.StyleIdentifier)
                ) && 
                (
                    this.StyleName == other.StyleName ||
                    this.StyleName != null &&
                    this.StyleName.Equals(other.StyleName)
                ) && 
                (
                    this.StyleOptions == other.StyleOptions ||
                    this.StyleOptions != null &&
                    this.StyleOptions.Equals(other.StyleOptions)
                ) && 
                (
                    this.TextWrapping == other.TextWrapping ||
                    this.TextWrapping != null &&
                    this.TextWrapping.Equals(other.TextWrapping)
                ) && 
                (
                    this.TopPadding == other.TopPadding ||
                    this.TopPadding != null &&
                    this.TopPadding.Equals(other.TopPadding)
                ) && 
                (
                    this.Link == other.Link ||
                    this.Link != null &&
                    this.Link.Equals(other.Link)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Alignment != null)
                    hash = hash * 59 + this.Alignment.GetHashCode();
                if (this.AllowAutoFit != null)
                    hash = hash * 59 + this.AllowAutoFit.GetHashCode();
                if (this.Bidi != null)
                    hash = hash * 59 + this.Bidi.GetHashCode();
                if (this.BottomPadding != null)
                    hash = hash * 59 + this.BottomPadding.GetHashCode();
                if (this.CellSpacing != null)
                    hash = hash * 59 + this.CellSpacing.GetHashCode();
                if (this.LeftIndent != null)
                    hash = hash * 59 + this.LeftIndent.GetHashCode();
                if (this.LeftPadding != null)
                    hash = hash * 59 + this.LeftPadding.GetHashCode();
                if (this.PreferredWidth != null)
                    hash = hash * 59 + this.PreferredWidth.GetHashCode();
                if (this.RightPadding != null)
                    hash = hash * 59 + this.RightPadding.GetHashCode();
                if (this.StyleIdentifier != null)
                    hash = hash * 59 + this.StyleIdentifier.GetHashCode();
                if (this.StyleName != null)
                    hash = hash * 59 + this.StyleName.GetHashCode();
                if (this.StyleOptions != null)
                    hash = hash * 59 + this.StyleOptions.GetHashCode();
                if (this.TextWrapping != null)
                    hash = hash * 59 + this.TextWrapping.GetHashCode();
                if (this.TopPadding != null)
                    hash = hash * 59 + this.TopPadding.GetHashCode();
                if (this.Link != null)
                    hash = hash * 59 + this.Link.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
